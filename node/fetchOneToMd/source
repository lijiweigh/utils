<article data-v-0b1a4f9a="" itemscope="itemscope" itemtype="http://schema.org/Article" class="article" data-v-575c8a08=""><meta itemprop="url" content="https://juejin.im/post/5d6cb884f265da03ae788f28"><meta itemprop="headline" content="H5 页面适配iPhone X，就是那么简单"><meta itemprop="keywords" content="CSS"><meta itemprop="datePublished" content="2019-09-02T07:26:25.363Z"><meta itemprop="image" content="https://b-gold-cdn.xitu.io/icon/icon-128.png"><div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="Oliver556"><meta itemprop="url" content="https://juejin.im/user/5af1124551882567336aace6"></div><div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"><div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://b-gold-cdn.xitu.io/icon/icon-white-180.png"><meta itemprop="width" content="180"><meta itemprop="height" content="180"></div></div><div data-v-0b1a4f9a="" class="author-info-block"><a data-v-0b1a4f9a="" href="/user/5af1124551882567336aace6" target="_blank" rel="" class="avatar-link"><div data-v-e232e062="" data-v-4bc4293a="" data-v-0b1a4f9a="" data-src="https://user-gold-cdn.xitu.io/2019/4/30/16a6d2b4691f4731?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2019/4/30/16a6d2b4691f4731?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a><div data-v-0b1a4f9a="" class="author-info-box"><a data-v-b8de4708="" data-v-0b1a4f9a="" href="/user/5af1124551882567336aace6" target="_blank" rel="" class="username username ellipsis">Oliver556<a data-v-b9e98e56="" data-v-b8de4708="" href="/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-b9e98e56="" src="https://b-gold-cdn.xitu.io/v3/static/img/lv-2.f597b88.svg" alt="lv-2"></a></a><div data-v-0b1a4f9a="" class="meta-box"><time data-v-0b1a4f9a="" datetime="2019-09-02T07:26:25.363Z" title="Mon Sep 02 2019 15:26:25 GMT+0800 (中国标准时间)" class="time">2019年09月02日</time><span data-v-0b1a4f9a="" class="views-count">阅读 5903</span><!----></div></div><button data-v-1de19339="" data-v-0b1a4f9a="" class="follow-button follow">关注</button></div><!----><h1 data-v-0b1a4f9a="" class="article-title">H5 页面适配iPhone X，就是那么简单</h1><div data-v-0b1a4f9a="" data-id="5d6cc4216fb9a06b05180813" itemprop="articleBody" class="article-content"><h2 class="heading" data-id="heading-0">前言</h2>
<p>  <a target="_blank" href="http://www.yyyweb.com/tag/iphonex" rel="nofollow noopener noreferrer">iPhoneX</a> 取消了物理按键，改成底部小黑条，这一改动导致网页出现了比较尴尬的屏幕适配问题。对于网页而言，顶部（刘海部位）的适配问题浏览器已经做了处理，所以我们只需要关注底部与小黑条的适配问题即可（即常见的吸底导航、返回顶部等各种相对底部 fixed 定位的元素）。</p>
<p>  笔者通过查阅了一些官方文档，以及结合实际项目中的一些处理经验，整理了一套简单的适配方案分享给大家，希望对大家有所帮助，以下是处理前后效果图：</p>
<p></p><figure><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2019/9/2/16cf0da345561e8c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1000" data-height="1000" src="https://user-gold-cdn.xitu.io/2019/9/2/16cf0da345561e8c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><figcaption></figcaption></figure><p></p>
<p>  大家都知道，iphoneX，屏幕顶部都有一个齐刘海，iPhoneX 取消了物理按键，改成底部小黑条，如果不做适配，这些地方就会被遮挡，因此本文讲述下齐刘海与底部小黑条的适配方法。</p>
<h2 class="heading" data-id="heading-1">几个新概念</h2>
<h3 class="heading" data-id="heading-2">安全区域</h3>
<p>  安全区域指的是一个可视窗口范围，处于安全区域的内容不受圆角<font color="red">（corners）</font>、齐刘海<font color="red">（sensor housing）</font>、小黑条<font color="red">（Home Indicator）</font>影响，如下图所示：</p>
<p></p><figure><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2019/9/2/16cf0b44836b8969?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1280" data-height="629" src="https://user-gold-cdn.xitu.io/2019/9/2/16cf0b44836b8969?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><figcaption></figcaption></figure><p></p>
<h3 class="heading" data-id="heading-3">viewport-fit</h3>
<blockquote>
<p>iOS11 新增特性，苹果公司为了适配 iPhoneX 对现有 <code>viewport meta</code> 标签的一个扩展，用于设置网页在可视窗口的布局方式，可设置 <font color="red"><strong>三个值</strong></font>：</p>
</blockquote>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>auto</td>
<td>默认值，跟 <code>contain</code> 表现一致。页面内容显示在safe area内。<code>viewprot-fit:auto</code>等同于<code>viewport-fit:contain</code></td>
</tr>
<tr>
<td>contain</td>
<td>可视窗口完全包含网页内容（左图）。页面内容显示在<code>safe area</code>内。<code>viewport-fit:contain</code></td>
</tr>
<tr>
<td>cover</td>
<td>网页内容完全覆盖可视窗口（右图）。页面内容充满屏幕。<code>viewport-fit:cover</code></td>
</tr>
</tbody>
</table>
<h3 class="heading" data-id="heading-4">constant 函数</h3>
<p>iOS11 新增特性，Webkit 的一个 CSS 函数，用于设定安全区域与边界的距离，有四个预定义的变量（单位是px）：</p>
<ul>
<li><code>safe-area-inset-left</code>：安全区域距离左边界距离</li>
<li><code>safe-area-inset-right</code>：安全区域距离右边界距离</li>
<li><code>safe-area-inset-top</code>：安全区域距离顶部边界距离</li>
<li><code>safe-area-inset-bottom</code>：安全区域距离底部边界距离</li>
</ul>
<p><strong>注意</strong>：网页默认不添加扩展的表现是 viewport-fit=contain，需要适配 iPhoneX 必须设置 <font color="red">viewport-fit=cover</font>，不然 <code>constant</code> 函数是不起作用的，这是适配的必要条件。</p>
<ul>
<li>官方文档中提到将来 <code>env()</code>要替换 <code>constant ()</code>，目前还不可用</li>
<li>这两个函数都是 webkit 中 css 函数，可以直接使用变量函数，只有在 webkit 内核下才支持</li>
<li><code>constant</code>：针对iOS &lt; 11.2以下系统</li>
<li><code>env</code>：针对于iOS &gt;= 11.2的系统</li>
</ul>
<blockquote>
<p>注意：网页默认不添加扩展的表现是 <code>viewport-fit=contain</code>，需要适配 <code>iPhone</code> 必须设置
<code>viewport-fit=cover</code>，<font color="red">这是适配的关键步骤</font>。</p>
</blockquote>
<h2 class="heading" data-id="heading-5">适配例子</h2>
<p>第一步：设置网页在可视窗口的布局方式</p>
<pre><code class="hljs bash copyable" lang="bash">&lt;meta name=<span class="hljs-string">'viewport'</span>  content=<span class="hljs-string">"width=device-width, viewport-fit=cover"</span>  /&gt;
<span class="copy-code-btn">复制代码</span></code></pre><p>第二步：页面主体内容限定在安全区域内</p>
<pre><code class="hljs css copyable" lang="css"><span class="hljs-selector-tag">body</span> {
  <span class="hljs-comment">/* 适配齐刘海*/</span>
  <span class="hljs-attribute">padding-top</span>: <span class="hljs-built_in">constant</span>(safe-area-inset-top);  
 <span class="hljs-comment">/* 适配底部黑条*/</span>
  <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-built_in">constant</span>(safe-area-inset-bottom);
}
<span class="copy-code-btn">复制代码</span></code></pre><p>第三步：fixed 元素的适配</p>
<ul>
<li>bottom 不是0的情况</li>
</ul>
<pre><code class="hljs css copyable" lang="css"><span class="hljs-comment">/* bottom 不是0的情况 */</span>
<span class="hljs-selector-class">.fixed</span> {
  <span class="hljs-attribute">bottom</span>: <span class="hljs-built_in">calc</span>(50px(原来的bottom值) + <span class="hljs-built_in">constant</span>(safe-area-inset-bottom));
}
<span class="copy-code-btn">复制代码</span></code></pre><ul>
<li>吸底的情况（bottom=0）</li>
</ul>
<pre><code class="hljs css copyable" lang="css"><span class="hljs-comment">/* 方法1 ：设置内边距 扩展高度*/</span>
<span class="hljs-comment">/* 这个方案需要吸底条必须是有背景色的，因为扩展的部分背景是跟随外容器的，否则出现镂空情况。*/</span>
<span class="hljs-selector-class">.fix</span> {
  <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-built_in">constant</span>(safe-area-inset-bottom);
}
<span class="hljs-comment">/* 直接扩展高度*/</span>
<span class="hljs-selector-class">.fix</span> {
  <span class="hljs-attribute">height</span>: <span class="hljs-built_in">calc</span>(60px(原来的高度值) + <span class="hljs-built_in">constant</span>(safe-area-inset-bottom));
}

<span class="hljs-comment">/* 方法2 ：在元素下面用一个空div填充， 但是背景色要一致 */</span>
<span class="hljs-selector-class">.blank</span> {
  <span class="hljs-attribute">position</span>: fixed;
  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;
  <span class="hljs-attribute">height</span>: <span class="hljs-built_in">constant</span>(safe-area-inset-bottom);
  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;
}
<span class="hljs-comment">/* 吸底元素样式 */</span>
<span class="hljs-selector-class">.fix</span> {
  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-built_in">constant</span>(safe-area-inset-bottom);
}
<span class="copy-code-btn">复制代码</span></code></pre><ul>
<li>最后： 使用@supports</li>
</ul>
<p>因为只有有齐刘海和底部黑条的机型才需要适配样式，可以用@support配合使用：</p>
<pre><code class="hljs css copyable" lang="css">@<span class="hljs-keyword">supports</span> (bottom: constant(safe-area-inset-bottom)) {
  <span class="hljs-selector-tag">body</span> {
    <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-built_in">constant</span>(safe-area-inset-bottom);
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><h3 class="heading" data-id="heading-6">完整检测代码</h3>
<ul>
<li><strong>@supports隔离兼容模式</strong></li>
</ul>
<p>因为只有有齐刘海和底部黑条的机型才需要适配样式，可以用@support配合使用：</p>
<pre><code class="hljs less copyable" lang="less"><span class="hljs-variable">@mixin</span> iphonex-css {
  <span class="hljs-attribute">padding-top</span>: constant(safe-area-inset-top); <span class="hljs-comment">//为导航栏+状态栏的高度 88px</span>
  <span class="hljs-attribute">padding-top</span>: env(safe-area-inset-top); <span class="hljs-comment">//为导航栏+状态栏的高度 88px</span>
  <span class="hljs-attribute">padding-left</span>: constant(safe-area-inset-left); <span class="hljs-comment">//如果未竖屏时为0</span>
  <span class="hljs-attribute">padding-left</span>: env(safe-area-inset-left); <span class="hljs-comment">//如果未竖屏时为0</span>
  <span class="hljs-attribute">padding-right</span>: constant(safe-area-inset-right); <span class="hljs-comment">//如果未竖屏时为0</span>
  <span class="hljs-attribute">padding-right</span>: env(safe-area-inset-right); <span class="hljs-comment">//如果未竖屏时为0</span>
  <span class="hljs-attribute">padding-bottom</span>: constant(safe-area-inset-bottom); <span class="hljs-comment">//为底下圆弧的高度 34px</span>
  <span class="hljs-attribute">padding-bottom</span>: env(safe-area-inset-bottom); <span class="hljs-comment">//为底下圆弧的高度 34px</span>
}

<span class="hljs-variable">@mixin</span> iphonex-support {
  <span class="hljs-keyword">@supports</span> (<span class="hljs-attribute">bottom</span>: constant(safe-area-inset-top)) or (<span class="hljs-attribute">bottom</span>: env(safe-area-inset-top)) {
    <span class="hljs-selector-tag">body</span><span class="hljs-selector-class">.iphonex</span> {
      <span class="hljs-variable">@include</span> iphonex-css;
    }
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><ul>
<li><strong>@media 媒体查询</strong></li>
</ul>
<pre><code class="hljs less copyable" lang="less"><span class="hljs-variable">@mixin</span> iphonex-css {
  <span class="hljs-attribute">padding-top</span>: constant(safe-area-inset-top); <span class="hljs-comment">//为导航栏+状态栏的高度 88px</span>
  <span class="hljs-attribute">padding-top</span>: env(safe-area-inset-top); <span class="hljs-comment">//为导航栏+状态栏的高度 88px</span>
  <span class="hljs-attribute">padding-left</span>: constant(safe-area-inset-left); <span class="hljs-comment">//如果未竖屏时为0</span>
  <span class="hljs-attribute">padding-left</span>: env(safe-area-inset-left); <span class="hljs-comment">//如果未竖屏时为0</span>
  <span class="hljs-attribute">padding-right</span>: constant(safe-area-inset-right); <span class="hljs-comment">//如果未竖屏时为0</span>
  <span class="hljs-attribute">padding-right</span>: env(safe-area-inset-right); <span class="hljs-comment">//如果未竖屏时为0</span>
  <span class="hljs-attribute">padding-bottom</span>: constant(safe-area-inset-bottom); <span class="hljs-comment">//为底下圆弧的高度 34px</span>
  <span class="hljs-attribute">padding-bottom</span>: env(safe-area-inset-bottom); <span class="hljs-comment">//为底下圆弧的高度 34px</span>
}

<span class="hljs-comment">/* iphonex 适配 */</span>
<span class="hljs-variable">@mixin</span> iphonex-media {
  <span class="hljs-keyword">@media</span> only screen and (<span class="hljs-attribute">device-width</span>: <span class="hljs-number">375px</span>) and (<span class="hljs-attribute">device-height</span>: <span class="hljs-number">812px</span>) and (<span class="hljs-attribute">-webkit-device-pixel-ratio</span>: <span class="hljs-number">3</span>) {
    <span class="hljs-selector-tag">body</span><span class="hljs-selector-class">.iphonex</span> {
      <span class="hljs-variable">@include</span> iphonex-css;
    }
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><h2 class="heading" data-id="heading-7">补充</h2>
<h3 class="heading" data-id="heading-8">注意项</h3>
<ul>
<li>  <code>env</code> 和 <code>constant</code> 只有在 <code>viewport-fit=cover</code> 时候才能生效, 上面使用的safari 的控制台可以检测模拟器中网页开启web inspector.</li>
</ul>
</div></article>